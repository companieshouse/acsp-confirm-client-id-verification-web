{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/inset-text/macro.njk" import govukInsetText %}
{% extends "layouts/default.njk" %}

{% set title = i18n.emailAddressTabTitle %}

{% block main_content %}
    <form action="{{ currentUrl }}?lang={{ lang }}" method="POST">
        {% include "partials/csrf_token.njk" %}
        <h1 class="govuk-heading-l">{{ i18n.emailAddress | replace("{NAME}", firstName + " " + lastName) }}</h1>
        <p class="govuk-body">{{ i18n.emailAddressCanOnlyUsedOnce }}</p>
        <div class="govuk-form-group">
        <div class="govuk-warning-text">
            <span class="govuk-warning-text__icon" aria-hidden="true">!</span>
            <strong class="govuk-warning-text__text">
            <span class="govuk-visually-hidden">{{ i18n.warning }}</span>
            {{ i18n.correctEmailAddressAlert }}
            </strong>
        </div>
            {{ govukInput({
                label: {
                    text: i18n.enterEmailAddress,
                    classes: "govuk-label--s"
                },
                hint: {
                    text: i18n.theyMustAbleToAccess
                },
                errorMessage: {
                    text: errors["email-address"].text
                } if errors["email-address"] | length,
                classes: "govuk-input",
                id: "email-address",
                name: "email-address",
                autocomplete: "email",
                value: payload["email-address"]
            }) }}

             {{ govukInput({
                label: {
                    text: i18n.confirmEmail,
                    classes: "govuk-label--s"
                },
                errorMessage: {
                    text: errors["confirm"].text
                } if errors["confirm"] | length,
                classes: "govuk-input",
                id: "confirm",
                name: "confirm",
                value: payload["confirm"],
                autocomplete: "email"
            }) }}
        </div>
        {{ govukButton({
            text: i18n.Continue,
            id: "continue-button"
        })}}
    </form>

<!-- Calling Matomo event script to capture event actions based on page title -->
    <script nonce={{ nonce | dump | safe }}>
        _paq.push(["setDocumentTitle", "User" + "{{i18n.emailAddress}}" + " - " + "{{i18n.matomoPageTitle}}"]);
        $("form").on("submit",function() {analyticsWithCustomisedMatomoText();});
        function analyticsWithCustomisedMatomoText(){
        var eventCategory = `{{ i18n.whatIs + i18n.emailAddress}}`;
        _paq.push(["trackEvent", eventCategory, eventNameBtn]);
        }
    </script>
{% endblock main_content %}