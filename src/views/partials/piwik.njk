<script src="{{ cdnHost }}/javascripts/vendor/jquery-3.3.1.min.js"></script>
<script src="{{ cdnHost }}/javascripts/app/piwik-enable.js"></script>


<!-- Matomo -->
<script nonce={{ nonce | dump | safe }}>
   // Setting the page title and removing "Error: " and "Gwall: " from the title for Matomo analytics.
    _paq.push(["setDocumentTitle", "{{ title | replace('Error: ', '') | replace('Gwall: ', '') }}" + " - " + "{{i18n.matomoPageTitle}}"]);
//  Matomo automation -- this is to remove all the Matomo calls with the hardcoded analytics texts from the njk pages.
//  In a situation where Matomo analytics needs a non generic customization, the existing hardcoded Matomo calls are still possible.
    var textOnRadioSelection = "";
    var buttonSuffix = "";
    var eventCategory = "";

//  Dynamic text to be obtained from the label of an href.
    var textOnHrefClick = "";
//  Dynamic text(s) and the id(s) to be obtained from the selected checkbox(es).
    var boxDetailsForAnalytics = new Map();

//  The following flag is needed to be set as true in confirm-identity-verification and check-your-answers njk for checkboxes 
//  to be ignored in the Matomo analytics.
    var ignoreCheckboxForThisPage = false;

    $(function() {
      //  The condition below checks and prioritizes the customized Matomo analytics calls.
      //  It has to be defined under "analyticsWithCustomisedMatomoText()" function in the page where the customization is needed.
      if (!$.isFunction(window.analyticsWithCustomisedMatomoText)){
        var eventCategory = matomoObliteration($(document).find("title").text().split(' -')[0]);
 
        $("form").on("submit",function() {
          
          //  The block below covers the Matomo analysis for the selected radio element.
          if ($("input[type='radio']:checked").length > 0) {
              buttonSuffix = "-"+$(this).find("input[type='radio']:checked").attr('value');
              textOnRadioSelection = matomoObliteration($(this).find("input[type='radio']:checked").siblings("label").text().trim());
          }
          
          //  The block below covers the Matomo analysis for the selected checkbox elements.
          if ($("input[type='checkbox']:checked").length > 0) {
            if(!ignoreCheckboxForThisPage) {
              $("input[type='checkbox']:checked").each(function() {
                boxDetailsForAnalytics.set($(this).val(),$(this).siblings("label").text().trim());
              });
            }  
          }

          //  Finally Matomo analytics are recorded on page submission.
          if(textOnRadioSelection){
            _paq.push(["trackEvent", eventCategory, textOnRadioSelection]);
          }

          if(boxDetailsForAnalytics.size > 0){
            boxDetailsForAnalytics.forEach((values, keys) => {
              _paq.push(["trackEvent", eventCategory,values, keys]);
            });
          }

          eventNameBtn = eventNameBtn+buttonSuffix;
          if(eventNameBtn){
            _paq.push(["trackEvent", eventCategory, eventNameBtn]);
          }
        });
      }
      //  On the button click the button details are recorder.
      $("button").click(function() {
        eventNameBtn = $(this).text().toUpperCase();
      });

      //  The block below covers the Matomo analysis for the href clicks.
      $(document).on("click", "a", function() {
        // Provide different email stop screen - removes user name from link analytics
        if ($(this).attr('id') && $(this).attr('id') === "provide-different-email-link-id") {
          textOnHrefClick = $(this).text().split('for')[0];
        } else if ($(this).attr('href') && $(this).attr('href') === "#navigation") {
          textOnHrefClick = $(this).children().text()
        } else {
          textOnHrefClick = $(this).text();
        }  
        if(textOnHrefClick){
              _paq.push(["trackEvent", eventCategory, textOnHrefClick]);
        }
      });
    });

    function matomoObliteration(textToBeChecked){
        var replacedRestrictedText = "<obliterated>";
        
        //  Complete obliteration for personal identifiable data 
        //  email and address for now, 
        //  new blocks can be added further below, e.g. phone number
        
        //  for Email
        if(/^\S+@\S+\.\S+$/.test(textToBeChecked)){
          buttonSuffix = "";
          return replacedRestrictedText;
        }
        
        //  for address
        if(/,\s[A-Z0-9]+[A-Z0-9]+/.test(textToBeChecked)){
         buttonSuffix = "-OPTED_ADDRESS";
          return replacedRestrictedText;
        }
        return textToBeChecked;
    }
//  End of Matomo automation snippet

  </script>
  <noscript>
    <p>
        <img src="{{PIWIK_URL}}/piwik.php?idsite={{PIWIK_SITE_ID}}" class="piwik-img" alt="" />
    </p>
</noscript>
<!-- Matomo Ends -->